## YAML Template.
---
spring:
    profiles: dev
    datasource:
#        username: CIBUTUATADM
#        password: CIBUTUATADM
#        url: jdbc:oracle:thin:@bdoulxu209.bdo.com.ph:1521:CIBUTUAT
#        driver-class: oracle.jdbc.driver.OracleDriver
        username: root
        password: root
        url: jdbc:mysql://localhost:3306/REPORT
    
    # To prevent the batch job to start automatically.
    # All configured jobs are run automatically by
    # Spring Boot's auto configuration service
    batch:
        job:
            enabled: false

app:
    chunkSize: 20000
    delimeter: "|"
    insertAccessLogQuery: 
        INSERT INTO access_log (log_date, ip_address, request, status, user_agent) 
        VALUES (:logDate, :ipAddress, :request, :status, :userAgent)
    findBlockedIpAddressesQuery: 
        select a.ip_address from 
            (select ip_address, count(0) log_count 
            from access_log 
            where log_date 
                between STR_TO_DATE(:start_date, '%Y-%m-%d.%H:%i:%s') 
                and timestampadd(SQL_TSI_DAY, 1, STR_TO_DATE(:start_date, '%Y-%m-%d.%H:%i:%s')) 
            group by ip_address) a 
        where log_count > :threshold
    # findBlockedIpAddressesQuery: select ip_address from (select ip_address, count(0) log_count from access_log where log_date between TO_TIMESTAMP(:start_date, 'YYYY-MM-DD.HH24:MI:SS') and TO_TIMESTAMP(:start_date, 'YYYY-MM-DD.HH24:MI:SS') + numToDSInterval(1, :log_duration) group by ip_address) where log_count > :threshold
    insertBlacklistQuery: 
        INSERT INTO blacklist (ip_address, reason) 
        VALUES (:ipAddress, :reason)
    accessLogColumnNames:
        - logDate
        - ipAddress
        - request
        - status
        - userAgent
    threshold:
        hourly: 200
        daily: 500
    duration:
        hourly: hour
        daily: day
